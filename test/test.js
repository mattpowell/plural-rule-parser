var Parser = require('..'),
    assert = require('assert'),
    tests;

tests = {
  'n mod 10 is 2': 'n % 10 === 2;',
  'n mod 10 is 3 and n mod 100 is not 13': 'n % 10 === 3 && n % 100 !== 13;',
  'n is 4': 'n === 4;',
  'n in 2..9': 'n >= 2 && n <= 9;',
  'n in 11,8,80,800': 'n === 11 || n === 8 || n === 80 || n === 800;',
  'n is 6': 'n === 6;',
  'n in 10..19,100..199,1000..1999': 'n >= 10 && n <= 19 || n >= 100 && n <= 199 || n >= 1000 && n <= 1999;',
  'n is 1': 'n === 1;',
  'n in 1,5': 'n === 1 || n === 5;',
  'n mod 10 in 1,2 and n mod 100 not in 11,12': '(n % 10 === 1 || n % 10 === 2) && !(n % 100 === 11 || n % 100 === 12);',
  'n mod 10 is 1 and n mod 100 is not 11': 'n % 10 === 1 && n % 100 !== 11;',
  'n in 1,3': 'n === 1 || n === 3;',
  'n in 1,5,7,8,9,10': 'n === 1 || n === 5 || n === 7 || n === 8 || n === 9 || n === 10;',
  'n mod 10 is 2 and n mod 100 is not 12': 'n % 10 === 2 && n % 100 !== 12;',
  'n is 2': 'n === 2;',
  'n in 2,3': 'n === 2 || n === 3;',
  'n in 0..1': 'n >= 0 && n <= 1;',
  'n mod 100 in 3..10': 'n % 100 >= 3 && n % 100 <= 10;',
  'n mod 100 in 11..99': 'n % 100 >= 11 && n % 100 <= 99;',
  'n is 0': 'n === 0;',
  'n mod 10 in 2..4 and n mod 100 not in 12..14': 'n % 10 >= 2 && n % 10 <= 4 && !(n % 100 >= 12 && n % 100 <= 14);',
  'n mod 10 is 0 or n mod 10 in 5..9 or n mod 100 in 11..14': 'n % 10 === 0 || n % 10 >= 5 && n % 10 <= 9 || n % 100 >= 11 && n % 100 <= 14;',
  'n mod 10 in 3..4,9 and n mod 100 not in 10..19,70..79,90..99': '(n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) && !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 || n % 100 >= 90 && n % 100 <= 99);',
  'n is not 0 and n mod 1000000 is 0': 'n !== 0 && n % 1000000 === 0;',
  'n mod 10 is 1 and n mod 100 not in 11,71,91': 'n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91);',
  'n mod 10 is 2 and n mod 100 not in 12,72,92': 'n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92);',
  'n in 2..4': 'n >= 2 && n <= 4;',
  'n is 3': 'n === 3;',
  'n within 0..2 and n is not 2': '(n | 0) >= 0 && (n | 0) <= 2 && n !== 2;',
  'n in 3..6': 'n >= 3 && n <= 6;',
  'n in 7..10': 'n >= 7 && n <= 10;',
  'n in 3..10,13..19': 'n >= 3 && n <= 10 || n >= 13 && n <= 19;',
  'n in 1,11': 'n === 1 || n === 11;',
  'n in 2,12': 'n === 2 || n === 12;',
  'n mod 10 in 1..2 or n mod 20 is 0': 'n % 10 >= 1 && n % 10 <= 2 || n % 20 === 0;',
  'n is not 0 AND n mod 10 is 0': 'n !== 0 && n % 10 === 0;',
  'n within 0..2 and n is not 0 and n is not 2': '(n | 0) >= 0 && (n | 0) <= 2 && n !== 0 && n !== 2;',
  'n mod 10 in 2..9 and n mod 100 not in 11..19': 'n % 10 >= 2 && n % 10 <= 9 && !(n % 100 >= 11 && n % 100 <= 19);',
  'n mod 10 is 1 and n mod 100 not in 11..19': 'n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19);',
  'n mod 10 is 1 and n is not 11': 'n % 10 === 1 && n !== 11;',
  'n is 0 OR n is not 1 AND n mod 100 in 1..19': '(n === 0 || n !== 1) && (n % 100 >= 1 && n % 100 <= 19);',
  'n is 0 or n mod 100 in 2..10': 'n === 0 || n % 100 >= 2 && n % 100 <= 10;',
  'n mod 100 in 11..19': 'n % 100 >= 11 && n % 100 <= 19;',
  'n is not 1 and n mod 10 in 0..1 or n mod 10 in 5..9 or n mod 100 in 12..14': 'n !== 1 && (n % 10 >= 0 && n % 10 <= 1) || n % 10 >= 5 && n % 10 <= 9 || n % 100 >= 12 && n % 100 <= 14;',
  'n in 2..10': 'n >= 2 && n <= 10;',
  'n within 0..1': '(n | 0) >= 0 && (n | 0) <= 1;',
  'n mod 100 in 3..4': 'n % 100 >= 3 && n % 100 <= 4;',
  'n mod 100 is 1': 'n % 100 === 1;',
  'n mod 100 is 2': 'n % 100 === 2;',
  'n in 0..1 or n in 11..99': 'n >= 0 && n <= 1 || n >= 11 && n <= 99;'
};

for (var test in tests) {
  var src = Parser.parse(test).toJsSource();
  assert.equal(src, tests[test], [
    'expected: ' + tests[test],
    'found: ' + src,
    'rule: ' + test,
    '======'
  ].join('\n'))
}

console.log('Passed!');